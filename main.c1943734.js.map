{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","startButton","document","querySelector","gameScore","messageLose","messageWin","messageStart","setGame","textContent","tiles","querySelectorAll","r","c","tile","id","toString","updateTile","setTwo","num","innerText","classList","value","add","filterZero","row","filter","slide","i","length","remove","push","slideLeft","getElementById","slideRight","reverse","slideUp","slideDown","hasEmptyTile","found","Math","floor","random","canMove","innertext","addEventListener","e","code"],"mappings":"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","file":"main.c1943734.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nconst startButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nstartButton.addEventListener('click', () => {\n  setGame();\n\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  startButton.innerText = 'Restart';\n\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n});\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n  gameScore.textContent = score;\n\n  const tiles = document.querySelectorAll('.tile');\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = tiles[r * rows + c];\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n  setTwo();\n  setTwo();\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('tile');\n\n  if (num > 0) {\n    tile.innerText = num.toString();\n    tile.classList.add(`tile--${num}`);\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n      setTwo();\n      break;\n    case 'ArrowRight':\n      slideRight();\n      setTwo();\n      break;\n    case 'ArrowUp':\n      slideUp();\n      setTwo();\n      break;\n    case 'ArrowDown':\n      slideDown();\n      setTwo();\n      break;\n  }\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(r) {\n  let row = r;\n\n  row = filterZero(row);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n      gameScore.innerText = score;\n    }\n\n    if (row[i] === 2048) {\n      messageStart.classList.add('hidden');\n      messageWin.classList.remove('hidden');\n    }\n  }\n\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    board[r] = row.reverse();\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = Math.random() >= 0.9 ? 4 : 2;\n\n      const value = board[r][c];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = value.toString();\n      tile.classList.add(`tile--${tile.innerText}`);\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyTile() {\n  let canMove = false;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n\n      if (c < columns - 1 && board[r][c] === board[r][c + 1]) {\n        canMove = true;\n      }\n\n      if (r < rows - 1 && board[r][c] === board[r + 1][c]) {\n        canMove = true;\n      }\n    }\n  }\n\n  if (!canMove) {\n    messageStart.classList.add('hidden');\n    messageLose.classList.remove('hidden');\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    startButton.innertext = 'Start';\n  }\n\n  return false;\n}\n"]}